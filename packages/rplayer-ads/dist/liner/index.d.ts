import RPlayer from 'rplayer';
import { AdsOpts, LinerAdsItem } from '../options';
import Video from './video';
import Ads from '..';
declare type PlayItem = {
    ad: LinerAdsItem;
    video: Video;
};
export default class Liner {
    readonly dom: HTMLElement;
    private readonly ads;
    private videoContainer;
    private countDownDom;
    readonly opts: AdsOpts;
    private player;
    private adsItems;
    private remainTime;
    private playlist;
    currentItem: PlayItem;
    private totalPlayTime;
    private tickTimer;
    private tickRemainTimer;
    private prevPlayerCurrentTime;
    private muted;
    playing: boolean;
    constructor(ads: Ads);
    get timeLeft(): number;
    private disablePlayer;
    private restorePlayer;
    private checkCanPlay;
    private calcRemainTime;
    private tickRemain;
    private untickRemain;
    private tick;
    private untick;
    private pausePlayer;
    skip(): void;
    show(): void;
    hide(): void;
    end(): void;
    destroyVideos(): void;
    setCountDown(t?: number): void;
    showCountDown(): void;
    hideCountDown(): void;
    appendVideo(dom: HTMLVideoElement): void;
    onVideoError(): boolean | void;
    onVideoPlay(): void;
    onVideoPause(): void;
    onVideoMuted(): void;
    onVideoUnmuted(): void;
    play(items: LinerAdsItem[]): void;
    playNext(): void;
    private onEnterFullscreen;
    private onExitFullscreen;
    private onPlayerEnded;
    install(player: RPlayer): void;
    private getCtrlDom;
}
export {};
//# sourceMappingURL=index.d.ts.map